{"ast":null,"code":"var _jsxFileName = \"/Users/bachdumpling/Flatiron School/Code/Phase-3/phase-3-project-v1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport format from \"date-fns/format\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport getDay from \"date-fns/getDay\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Popup from './Component/Popup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\")\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\nconsole.log(new Date());\n\nfunction App() {\n  _s();\n\n  const [newEvent, setNewEvent] = useState({\n    title: \"\",\n    start: \"\",\n    end: \"\"\n  });\n  const [allEvents, setAllEvents] = useState([]);\n  const [data, setData] = useState([]);\n  const [buttonPopup, setButtonPopup] = useState(false);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function getData() {\n    fetch(\"http://localhost:4000/events\").then(response => response.json()).then(data => setAllEvents(data)).then();\n  }\n\n  const events = allEvents.map(item => {\n    item.start = new Date(item.start);\n  });\n\n  function removeEventHandler(e) {\n    console.log(e);\n    console.log(`removed ${e.id}`);\n    setAllEvents(allEvents.filter(event => {\n      return event.id !== e.id;\n    }));\n  }\n\n  function handleAddEvent() {\n    setAllEvents([...allEvents, newEvent]);\n  }\n\n  function handlePopup() {\n    setButtonPopup(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"event-input\",\n        type: \"text\",\n        placeholder: \"Add Title\",\n        style: {\n          width: \"20%\",\n          marginRight: \"10px\"\n        },\n        value: newEvent.title,\n        onChange: e => setNewEvent({ ...newEvent,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        id: \"start-input\",\n        placeholderText: \"Start Date\",\n        selected: newEvent.start,\n        onChange: start => setNewEvent({ ...newEvent,\n          start\n        }),\n        showTimeSelect: true,\n        timeFormat: \"HH:mm\",\n        timeIntervals: 15,\n        timeCaption: \"time\",\n        dateFormat: \"MMMM d, yyyy h:mm aa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        placeholderText: \"End Date\",\n        selected: newEvent.end,\n        onChange: end => setNewEvent({ ...newEvent,\n          end\n        }),\n        showTimeSelect: true,\n        timeFormat: \"HH:mm\",\n        timeIntervals: 15,\n        timeCaption: \"time\",\n        dateFormat: \"MMMM d, yyyy h:mm aa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submit-button\",\n        onClick: handleAddEvent,\n        children: \"Add Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: allEvents,\n      popup: handlePopup,\n      onDoubleClickEvent: removeEventHandler,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 800,\n        margin: \"50px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      trigger: buttonPopup,\n      setTrigger: setButtonPopup,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"My Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ce3tavvoO0wObtzcGBJtq/+NlIU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","React","useEffect","useState","DatePicker","Popup","locales","require","localizer","console","log","Date","App","newEvent","setNewEvent","title","start","end","allEvents","setAllEvents","data","setData","buttonPopup","setButtonPopup","getData","fetch","then","response","json","events","map","item","removeEventHandler","e","id","filter","event","handleAddEvent","handlePopup","width","marginRight","target","value","height","margin"],"sources":["/Users/bachdumpling/Flatiron School/Code/Phase-3/phase-3-project-v1/src/App.js"],"sourcesContent":["import './App.css';\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport format from \"date-fns/format\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\"\nimport getDay from \"date-fns/getDay\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport Popup from './Component/Popup';\n\n\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\")\n}\n\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n})\n\n\nconsole.log(new Date)\n\nfunction App() {\n  const [newEvent, setNewEvent] = useState({ title: \"\", start: \"\", end: \"\" })\n  const [allEvents, setAllEvents] = useState([])\n  const [data, setData] = useState([])\n  const [buttonPopup, setButtonPopup] = useState(false)\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  function getData() {\n    fetch(\"http://localhost:4000/events\")\n      .then(response => response.json())\n      .then(data => setAllEvents(data))\n      .then()\n  }\n  const events = allEvents.map((item) => {\n    item.start = new Date(item.start)\n  })\n\n  function removeEventHandler(e) {\n    console.log(e)\n    console.log(`removed ${e.id}`)\n    setAllEvents(allEvents.filter((event) => {\n      return event.id !== e.id\n    }))\n  }\n\n  function handleAddEvent() {\n    setAllEvents([...allEvents, newEvent])\n  }\n\n  function handlePopup() {\n    setButtonPopup(true)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Calendar</h1>\n      <h2>Add New Event</h2>\n      <div>\n        <input id='event-input' type=\"text\" placeholder=\"Add Title\" style={{ width: \"20%\", marginRight: \"10px\" }}\n          value={newEvent.title} onChange={(e) => setNewEvent({ ...newEvent, title: e.target.value })} />\n\n        <DatePicker id='start-input' placeholderText='Start Date'\n          selected={newEvent.start} onChange={(start) => setNewEvent({ ...newEvent, start })} showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={15}\n          timeCaption=\"time\"\n          dateFormat=\"MMMM d, yyyy h:mm aa\" />\n\n        <DatePicker placeholderText='End Date' selected={newEvent.end} onChange={(end) => setNewEvent({ ...newEvent, end })}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={15}\n          timeCaption=\"time\"\n          dateFormat=\"MMMM d, yyyy h:mm aa\" />\n\n        <button id='submit-button' onClick={handleAddEvent} >Add Event</button>\n      </div>\n\n      <Calendar localizer={localizer}\n        events={allEvents}\n        popup={handlePopup}\n        onDoubleClickEvent={removeEventHandler}\n        startAccessor=\"start\" endAccessor=\"end\"\n        style={{ height: 800, margin: \"50px\" }}\n      />\n\n      <Popup trigger={buttonPopup} setTrigger={setButtonPopup}>\n        <h3>My Event</h3>\n      </Popup>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,gBAAnB,QAA2C,oBAA3C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,mDAAP;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAGA,MAAMC,OAAO,GAAG;EACd,SAASC,OAAO,CAAC,uBAAD;AADF,CAAhB;AAIA,MAAMC,SAAS,GAAGZ,gBAAgB,CAAC;EACjCC,MADiC;EAEjCC,KAFiC;EAGjCC,WAHiC;EAIjCC,MAJiC;EAKjCM;AALiC,CAAD,CAAlC;AASAG,OAAO,CAACC,GAAR,CAAY,IAAIC,IAAJ,EAAZ;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC;IAAEY,KAAK,EAAE,EAAT;IAAaC,KAAK,EAAE,EAApB;IAAwBC,GAAG,EAAE;EAA7B,CAAD,CAAxC;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,KAAD,CAA9C;EAEAD,SAAS,CAAC,MAAM;IACdsB,OAAO;EACR,CAFQ,EAEN,EAFM,CAAT;;EAIA,SAASA,OAAT,GAAmB;IACjBC,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQN,IAAI,IAAID,YAAY,CAACC,IAAD,CAF5B,EAGGM,IAHH;EAID;;EACD,MAAMG,MAAM,GAAGX,SAAS,CAACY,GAAV,CAAeC,IAAD,IAAU;IACrCA,IAAI,CAACf,KAAL,GAAa,IAAIL,IAAJ,CAASoB,IAAI,CAACf,KAAd,CAAb;EACD,CAFc,CAAf;;EAIA,SAASgB,kBAAT,CAA4BC,CAA5B,EAA+B;IAC7BxB,OAAO,CAACC,GAAR,CAAYuB,CAAZ;IACAxB,OAAO,CAACC,GAAR,CAAa,WAAUuB,CAAC,CAACC,EAAG,EAA5B;IACAf,YAAY,CAACD,SAAS,CAACiB,MAAV,CAAkBC,KAAD,IAAW;MACvC,OAAOA,KAAK,CAACF,EAAN,KAAaD,CAAC,CAACC,EAAtB;IACD,CAFY,CAAD,CAAZ;EAGD;;EAED,SAASG,cAAT,GAA0B;IACxBlB,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAeL,QAAf,CAAD,CAAZ;EACD;;EAED,SAASyB,WAAT,GAAuB;IACrBf,cAAc,CAAC,IAAD,CAAd;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,wBACE;QAAO,EAAE,EAAC,aAAV;QAAwB,IAAI,EAAC,MAA7B;QAAoC,WAAW,EAAC,WAAhD;QAA4D,KAAK,EAAE;UAAEgB,KAAK,EAAE,KAAT;UAAgBC,WAAW,EAAE;QAA7B,CAAnE;QACE,KAAK,EAAE3B,QAAQ,CAACE,KADlB;QACyB,QAAQ,EAAGkB,CAAD,IAAOnB,WAAW,CAAC,EAAE,GAAGD,QAAL;UAAeE,KAAK,EAAEkB,CAAC,CAACQ,MAAF,CAASC;QAA/B,CAAD;MADrD;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,UAAD;QAAY,EAAE,EAAC,aAAf;QAA6B,eAAe,EAAC,YAA7C;QACE,QAAQ,EAAE7B,QAAQ,CAACG,KADrB;QAC4B,QAAQ,EAAGA,KAAD,IAAWF,WAAW,CAAC,EAAE,GAAGD,QAAL;UAAeG;QAAf,CAAD,CAD5D;QACsF,cAAc,MADpG;QAEE,UAAU,EAAC,OAFb;QAGE,aAAa,EAAE,EAHjB;QAIE,WAAW,EAAC,MAJd;QAKE,UAAU,EAAC;MALb;QAAA;QAAA;QAAA;MAAA,QAJF,eAWE,QAAC,UAAD;QAAY,eAAe,EAAC,UAA5B;QAAuC,QAAQ,EAAEH,QAAQ,CAACI,GAA1D;QAA+D,QAAQ,EAAGA,GAAD,IAASH,WAAW,CAAC,EAAE,GAAGD,QAAL;UAAeI;QAAf,CAAD,CAA7F;QACE,cAAc,MADhB;QAEE,UAAU,EAAC,OAFb;QAGE,aAAa,EAAE,EAHjB;QAIE,WAAW,EAAC,MAJd;QAKE,UAAU,EAAC;MALb;QAAA;QAAA;QAAA;MAAA,QAXF,eAkBE;QAAQ,EAAE,EAAC,eAAX;QAA2B,OAAO,EAAEoB,cAApC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAlBF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAwBE,QAAC,QAAD;MAAU,SAAS,EAAE7B,SAArB;MACE,MAAM,EAAEU,SADV;MAEE,KAAK,EAAEoB,WAFT;MAGE,kBAAkB,EAAEN,kBAHtB;MAIE,aAAa,EAAC,OAJhB;MAIwB,WAAW,EAAC,KAJpC;MAKE,KAAK,EAAE;QAAEW,MAAM,EAAE,GAAV;QAAeC,MAAM,EAAE;MAAvB;IALT;MAAA;MAAA;MAAA;IAAA,QAxBF,eAgCE,QAAC,KAAD;MAAO,OAAO,EAAEtB,WAAhB;MAA6B,UAAU,EAAEC,cAAzC;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAhCF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsCD;;GA1EQX,G;;KAAAA,G;AA4ET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}